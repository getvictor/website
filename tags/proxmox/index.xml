<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Proxmox on Victor on Software</title><link>https://victoronsoftware.com/tags/proxmox/</link><description>Recent content in Proxmox on Victor on Software</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://victoronsoftware.com/tags/proxmox/index.xml" rel="self" type="application/rss+xml"/><item><title>Setting up a virtual router (pfSense on Proxmox)</title><link>https://victoronsoftware.com/posts/setting-up-a-virtual-router/</link><pubDate>Wed, 22 Nov 2023 00:00:00 +0000</pubDate><guid>https://victoronsoftware.com/posts/setting-up-a-virtual-router/</guid><description>&lt;img src="https://victoronsoftware.com/posts/setting-up-a-virtual-router/cover.jpeg" alt="Featured image of post Setting up a virtual router (pfSense on Proxmox)" /&gt;&lt;p&gt;Traditionally, network routers used dedicated bare metal machines. However, in the last several years, we’ve seen a rise
in software-based routers that can be deployed either on bare metal, on a VM, or even on a container. This means these
virtual routers can be used to replace existing router software on an older router. They can run in the cloud. Or they
can be installed on do-it-yourself (DIY) hardware. A couple popular open source software-based routers are
&lt;a class="link" href="https://www.pfsense.org/" target="_blank" rel="noopener"
&gt;pfSense&lt;/a&gt; and &lt;a class="link" href="https://opnsense.org/" target="_blank" rel="noopener"
&gt;OPNsense&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="why-use-a-virtual-router"&gt;&lt;a href="#why-use-a-virtual-router" class="header-anchor"&gt;&lt;/a&gt;Why use a virtual router?
&lt;/h2&gt;&lt;p&gt;For one, these routers offer enterprise-level features such as build-in VPN support, traffic analysis, and extensive
diagnostics, among others. Another reason is that having a virtual router gives you the ability to experiment &amp;ndash; you can
install multiple routers on top of your hypervisor, and try all of them out. A third reason is that the virtual router
may be only one of many VMs that you run on your hardware. You can use the same piece of hardware to run a router, an
ad-blocking service, a media server, and other applications.&lt;/p&gt;
&lt;h2 id="advanced-virtual-router-installation-and-set-up"&gt;&lt;a href="#advanced-virtual-router-installation-and-set-up" class="header-anchor"&gt;&lt;/a&gt;Advanced virtual router installation and set up
&lt;/h2&gt;&lt;p&gt;When setting up our virtual router, we chose to use &lt;a class="link" href="https://pve.proxmox.com/wiki/PCI%28e%29_Passthrough" target="_blank" rel="noopener"
&gt;PCI Passthrough&lt;/a&gt;
to allow the virtual router direct access to the NIC hardware. Direct access to hardware improves the latency of our
internet traffic. In addition, we wanted our hypervisor to sit behind the router, and not be exposed to the public. This
reduces the attack surface for potential bad agents. However, routing hypervisor traffic through the router made our
setup a bit tricker. It is like the chicken or the egg dilemma &amp;ndash; how do you put your hypervisor behind the router when
the hypervisor is responsible for managing the router? Below is the approach we used when installing pfSense on top of
&lt;a class="link" href="https://www.proxmox.com/en/proxmox-virtual-environment/overview" target="_blank" rel="noopener"
&gt;Proxmox Virtual Environment (PVE)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For the initial installation, we did not use PCI Passthrough and instead used a virtual network bridge (&lt;strong&gt;vmbr0&lt;/strong&gt;). We
configured the router VM to start on boot.&lt;/p&gt;
&lt;figure&gt;&lt;img src="https://victoronsoftware.com/posts/setting-up-a-virtual-router/Virtual-Router-1.jpg"
alt="Initial virtual router configuration"&gt;&lt;figcaption&gt;
&lt;h4&gt;Initial virtual router configuration&lt;/h4&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;This allowed us to continue controlling the virtual router through the PVE web GUI. We set up the router and enabled
access to it through the serial interface, which we used in the next step. Then, we put the system into its final
configuration.&lt;/p&gt;
&lt;figure&gt;&lt;img src="https://victoronsoftware.com/posts/setting-up-a-virtual-router/Virtual-Router-2.jpg"
alt="Final virtual router configuration"&gt;&lt;figcaption&gt;
&lt;h4&gt;Final virtual router configuration&lt;/h4&gt;
&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;In order to finish configuring, we had to plug in a monitor and keyboard into our hardware. We accessed the virtual
router via the serial interface from the PVE command line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;qm terminal &lt;span style="color:#ae81ff"&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We updated the WAN interface to use &lt;strong&gt;eth0&lt;/strong&gt;. At this point, the LAN interface &lt;strong&gt;eth1&lt;/strong&gt; had access to the internet.&lt;/p&gt;
&lt;p&gt;In addition, we added a second LAN interface for the network bridge (&lt;strong&gt;vmbr0&lt;/strong&gt;). We made sure firewall configurations
for both LAN interfaces were the same.&lt;/p&gt;
&lt;p&gt;Next, from the PVE command line, we updated the PVE IP and gateway to point at the router by modifying the following
files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;/etc/network/interfaces
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;/etc/hosts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After rebooting PVE, we had access to the internet and to the PVE Web GUI from our new LAN.&lt;/p&gt;
&lt;h2 id="updating-router-software"&gt;&lt;a href="#updating-router-software" class="header-anchor"&gt;&lt;/a&gt;Updating router software
&lt;/h2&gt;&lt;p&gt;Using a virtual router with PCI Passthrough creates a unique challenge when doing software updates. What if the new
version doesn’t work? What if you lose all internet access.&lt;/p&gt;
&lt;p&gt;We can mitigate potential issues. First, we recommend always making a backup of the router VM when upgrading. That way
we can easily roll back the change. Switching to a backup, however, requires keyboard and monitor access to your
hardware, since it must be done via the PVE command line.&lt;/p&gt;
&lt;p&gt;Another way to safely upgrade is to spin up a second VM running updated router software. The second VM can be either
from a backup or brand new. This VM should use virtual network bridges for its connections. Once it is properly
configured, we can stop the first router VM and switch the port connections to the second VM. This flow also requires
accessing the router via the serial interface to update the WAN/LAN interfaces.&lt;/p&gt;
&lt;h2 id="further-reading"&gt;&lt;a href="#further-reading" class="header-anchor"&gt;&lt;/a&gt;Further reading
&lt;/h2&gt;&lt;p&gt;Recently, we have been &lt;a class="link" href="../why-you-need-vlan/" &gt;setting up VLANs on our home network&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="setting-up-a-virtual-router-video"&gt;&lt;a href="#setting-up-a-virtual-router-video" class="header-anchor"&gt;&lt;/a&gt;Setting up a virtual router video
&lt;/h2&gt;&lt;div class="video-wrapper"&gt;
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/uj_lB__QDTc"
allowfullscreen
title="YouTube Video"
&gt;
&lt;/iframe&gt;
&lt;/div&gt;</description></item></channel></rss>